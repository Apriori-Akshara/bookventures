import Head from "next/head";
import { Inter } from "next/font/google";
import Navbar from "../components/testpage/navbar/Newnavbar";
import Hero from "../components/testpage/herosection/hero";
import Slider from "../components/testpage/herosection/Heroslider.js";
import Reading from "../components/homepage/middlecomponents/reading";
import Books from "../components/homepage/middlecomponents/bookssection";
import Lower from "../components/homepage/lowercomponents/lowercomponents";
import Footer from "../components/homepage/bottomcomponent/footer";
import Ads from "../components/homepage/ad/ads";
import dynamic from "next/dynamic";
import Kids from "../components/homepage/middlecomponents/kidssection";
import Modal from "@/components/Modal/Modal";
import LoginModal from '../components/Loginmodal/LoginModal'
import LoginComponent from '../components/Loginmodal/LoginComponent'
import { useEffect } from "react";
import MyComponent from "../components/Modal/Mycomponent";
import { useDispatch, useSelector } from "react-redux";
import { truethy, falsey } from "../store/slices/modalSlice";
import { falcey } from "../store/slices/loginSlice/loginmodalSlice";
import ProfileModal from '../components/Porfilemodal/ProfileModal'
import ProfileComponent from '../components/Porfilemodal/ProfileComponent'
import { falsch } from '../store/slices/ProfileSlice/ProfileSlice'

const inter = Inter({ subsets: ["latin"] });

export const getStaticProps = async () => {
  const [resulting, res2] = await Promise.all([
    fetch(`${process.env.NEXT_PUBLIC_URL}/authors?populate=*`, {
      headers: {
        Authorization: "bearer " + process.env.NEXT_PUBLIC_TOKEN,
      },
    }),
    fetch(`${process.env.NEXT_PUBLIC_URL}/awards?populate=*`, {
      headers: {
        Authorization: "bearer " + process.env.NEXT_PUBLIC_TOKEN,
      },
    }),
  ]);
  const [result, data2] = await Promise.all([resulting.json(), res2.json()]);
  return {
    props: {
      product: result.data,
      data2: data2.data,
    },
  };
};

const Home = ({ product, data2 }) => {
  const dispatch = useDispatch();
  const modal = useSelector(state => state.modal);
  const loginmodal = useSelector(state => state.loginmodal);
  const profilemodal = useSelector(state => state.profile);

  useEffect(() => {
    const timer = setTimeout(() => {
      dispatch(truethy());
    }, 1000);
    return () => clearTimeout(timer);
  }, []);

  return (
    <>
      <Head>
        <title>Bookventures</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.png" />
      </Head>
      <div>
        {/* <Topcomponent />
        <Herosection /> */}
        <Navbar />
        <Hero />
        <Slider />
        <Ads />
        <Reading />
        <Books data={product} data2={data2} />
        <Ads />
        <Kids data={product} />
        <Lower />
        <Footer />
      </div>
      <Modal open={modal.value}>
        <MyComponent onClose={() => dispatch(falsey())} />
      </Modal>
      <LoginModal logopen={loginmodal.value}>
        <LoginComponent onCloselog={() => dispatch(falcey())}/>
      </LoginModal>
      <ProfileModal proopen={profilemodal.value}>
        <ProfileComponent onClosepro={() => dispatch(falsch())}/>
      </ProfileModal>
    </>
  );
};

export default dynamic(() => Promise.resolve(Home), { ssr: false });
